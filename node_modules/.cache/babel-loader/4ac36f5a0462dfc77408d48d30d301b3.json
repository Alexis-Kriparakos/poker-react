{"ast":null,"code":"import React from 'react';\nconst SUITS = [\"spades\", \"diamonds\", \"clubs\", \"hearts\"];\nconst RANKS = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\nconst WEIGHT = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n\nconst createDeck = () => {\n  let deck = new Array();\n\n  for (let i = 0; i < SUITS.length; i++) {\n    for (let j = 0; j < RANKS.length; j++) {\n      let card = {\n        rank: RANKS[j],\n        suit: SUITS[i],\n        weight: WEIGHT[j]\n      };\n      deck.push(card);\n    }\n  }\n\n  return deck;\n};\n\nlet unshuffledDeck = createDeck();\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unshuffledDeck: createDeck(),\n      deck: this.shuffleDeck(unshuffledDeck)\n    };\n  }\n\n  shuffleDeck(deck) {\n    let m = deck.length,\n        currentElem,\n        remainElem;\n\n    while (m) {\n      remainElem = Math.floor(Math.random() * m--);\n      currentElem = deck[m];\n      deck[m] = deck[remainElem];\n      deck[remainElem] = currentElem;\n    }\n\n    return deck;\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/alexis_fiz/Desktop/poker-rect/src/component/Game.js"],"names":["React","SUITS","RANKS","WEIGHT","createDeck","deck","Array","i","length","j","card","rank","suit","weight","push","unshuffledDeck","Game","Component","constructor","props","state","shuffleDeck","m","currentElem","remainElem","Math","floor","random"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,KAAK,GAAG,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,EAAgC,QAAhC,CAAd;AACA,MAAMC,KAAK,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,IAAzC,EAA+C,GAA/C,EAAoD,GAApD,EAAyD,GAAzD,EAA8D,GAA9D,CAAd;AACA,MAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,CAAf;;AACA,MAAMC,UAAU,GAAG,MAAM;AACvB,MAAIC,IAAI,GAAG,IAAIC,KAAJ,EAAX;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACO,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,KAAK,CAACM,MAA1B,EAAkCC,CAAC,EAAnC,EAAsC;AACpC,UAAIC,IAAI,GAAG;AAACC,QAAAA,IAAI,EAAET,KAAK,CAACO,CAAD,CAAZ;AAAiBG,QAAAA,IAAI,EAAEX,KAAK,CAACM,CAAD,CAA5B;AAAiCM,QAAAA,MAAM,EAAEV,MAAM,CAACM,CAAD;AAA/C,OAAX;AACAJ,MAAAA,IAAI,CAACS,IAAL,CAAUJ,IAAV;AACD;AACF;;AACD,SAAOL,IAAP;AACD,CATD;;AAUA,IAAIU,cAAc,GAAGX,UAAU,EAA/B;;AAEA,MAAMY,IAAN,SAAmBhB,KAAK,CAACiB,SAAzB,CAAmC;AAE/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTL,MAAAA,cAAc,EAAEX,UAAU,EADjB;AAETC,MAAAA,IAAI,EAAE,KAAKgB,WAAL,CAAiBN,cAAjB;AAFG,KAAb;AAIH;;AAEDM,EAAAA,WAAW,CAAChB,IAAD,EAAO;AACd,QAAIiB,CAAC,GAAGjB,IAAI,CAACG,MAAb;AAAA,QAAqBe,WAArB;AAAA,QAAkCC,UAAlC;;AACE,WAAOF,CAAP,EAAU;AACRE,MAAAA,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,CAAC,EAA5B,CAAb;AACAC,MAAAA,WAAW,GAAGlB,IAAI,CAACiB,CAAD,CAAlB;AACAjB,MAAAA,IAAI,CAACiB,CAAD,CAAJ,GAAUjB,IAAI,CAACmB,UAAD,CAAd;AACAnB,MAAAA,IAAI,CAACmB,UAAD,CAAJ,GAAmBD,WAAnB;AACH;;AACD,WAAOlB,IAAP;AACD;;AAnB4B;;AAuBnC,eAAeW,IAAf","sourcesContent":["import React from 'react';\n\nconst SUITS = [\"spades\", \"diamonds\", \"clubs\", \"hearts\"];\nconst RANKS = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\nconst WEIGHT = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\nconst createDeck = () => {\n  let deck = new Array();\n  for (let i = 0; i < SUITS.length; i++) {\n    for (let j = 0; j < RANKS.length; j++){\n      let card = {rank: RANKS[j], suit: SUITS[i], weight: WEIGHT[j]};\n      deck.push(card);\n    }\n  }\n  return deck;\n}\nlet unshuffledDeck = createDeck();\n\nclass Game extends React.Component {\n  \n    constructor(props){\n        super(props);\n        this.state = {\n            unshuffledDeck: createDeck(),\n            deck: this.shuffleDeck(unshuffledDeck),\n        }\n    }\n   \n    shuffleDeck(deck) {\n        let m = deck.length, currentElem, remainElem;\n          while (m) {\n            remainElem = Math.floor(Math.random() * m--);\n            currentElem = deck[m];\n            deck[m] = deck[remainElem];\n            deck[remainElem] = currentElem;\n        } \n        return deck;\n      }\n}\n\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}