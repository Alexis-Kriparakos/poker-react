{"ast":null,"code":"import React from 'react';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unshuffledDeck: this.createDeck(),\n      deck: this.shuffleDeck(unshuffledDeck)\n    };\n  }\n\n  createDeck() {\n    let deck = new Array();\n\n    for (let i = 0; i < SUITS.length; i++) {\n      for (let j = 0; j < RANKS.length; j++) {\n        let card = {\n          rank: RANKS[j],\n          suit: SUITS[i],\n          weight: WEIGHT[j]\n        };\n        deck.push(card);\n      }\n    }\n\n    return deck;\n  }\n\n  shuffleDeck(deck) {\n    let m = deck.length,\n        currentElem,\n        remainElem;\n\n    while (m) {\n      remainElem = Math.floor(Math.random() * m--);\n      currentElem = deck[m];\n      deck[m] = deck[remainElem];\n      deck[remainElem] = currentElem;\n    }\n\n    return deck;\n  }\n\n}","map":{"version":3,"sources":["/Users/alexis_fiz/Desktop/poker-rect/src/component/Game.js"],"names":["React","Game","Component","constructor","props","state","unshuffledDeck","createDeck","deck","shuffleDeck","Array","i","SUITS","length","j","RANKS","card","rank","suit","weight","WEIGHT","push","m","currentElem","remainElem","Math","floor","random"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE,KAAKC,UAAL,EADP;AAETC,MAAAA,IAAI,EAAE,KAAKC,WAAL,CAAiBH,cAAjB;AAFG,KAAb;AAIH;;AACDC,EAAAA,UAAU,GAAG;AACT,QAAIC,IAAI,GAAG,IAAIE,KAAJ,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,KAAK,CAACC,MAA1B,EAAkCF,CAAC,EAAnC,EAAuC;AACrC,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,KAAK,CAACF,MAA1B,EAAkCC,CAAC,EAAnC,EAAsC;AACpC,YAAIE,IAAI,GAAG;AAACC,UAAAA,IAAI,EAAEF,KAAK,CAACD,CAAD,CAAZ;AAAiBI,UAAAA,IAAI,EAAEN,KAAK,CAACD,CAAD,CAA5B;AAAiCQ,UAAAA,MAAM,EAAEC,MAAM,CAACN,CAAD;AAA/C,SAAX;AACAN,QAAAA,IAAI,CAACa,IAAL,CAAUL,IAAV;AACD;AACF;;AACD,WAAOR,IAAP;AACH;;AACDC,EAAAA,WAAW,CAACD,IAAD,EAAO;AACd,QAAIc,CAAC,GAAGd,IAAI,CAACK,MAAb;AAAA,QAAqBU,WAArB;AAAA,QAAkCC,UAAlC;;AACE,WAAOF,CAAP,EAAU;AACRE,MAAAA,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,CAAC,EAA5B,CAAb;AACAC,MAAAA,WAAW,GAAGf,IAAI,CAACc,CAAD,CAAlB;AACAd,MAAAA,IAAI,CAACc,CAAD,CAAJ,GAAUd,IAAI,CAACgB,UAAD,CAAd;AACAhB,MAAAA,IAAI,CAACgB,UAAD,CAAJ,GAAmBD,WAAnB;AACH;;AACD,WAAOf,IAAP;AACD;;AA3B4B","sourcesContent":["import React from 'react';\n\n\nclass Game extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            unshuffledDeck: this.createDeck(),\n            deck: this.shuffleDeck(unshuffledDeck),\n        }\n    }\n    createDeck() {\n        let deck = new Array();\n        for (let i = 0; i < SUITS.length; i++) {\n          for (let j = 0; j < RANKS.length; j++){\n            let card = {rank: RANKS[j], suit: SUITS[i], weight: WEIGHT[j]};\n            deck.push(card);\n          }\n        }\n        return deck;\n    }\n    shuffleDeck(deck) {\n        let m = deck.length, currentElem, remainElem;\n          while (m) {\n            remainElem = Math.floor(Math.random() * m--);\n            currentElem = deck[m];\n            deck[m] = deck[remainElem];\n            deck[remainElem] = currentElem;\n        } \n        return deck;\n      }\n}"]},"metadata":{},"sourceType":"module"}