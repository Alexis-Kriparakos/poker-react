{"ast":null,"code":"import _slicedToArray from \"/Users/alexis_fiz/Desktop/poker-rect/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexis_fiz/Desktop/poker-rect/src/component/Game.js\";\nimport React from 'react';\nimport Player from './Player.js';\nimport { rateHand, createDeck, shuffleDeck } from '../help/help.js';\nimport './CSS-Playing-Cards/cards.css';\nimport './card.css';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeP1 = newHand => {\n      this.setState({\n        player1: {\n          player1Hand: newHand\n        }\n      });\n    };\n\n    this.handleChangeP2 = newHand => {\n      this.setState({\n        player2: {\n          player2Hand: newHand\n        }\n      });\n    };\n\n    this.state = {\n      game: {\n        unshuffledDeck: null,\n        deck: null,\n        winner: null,\n        pot: 0,\n        minBet: 100\n      },\n      player1: {\n        player1Hand: []\n      },\n      player2: {\n        player2Hand: []\n      }\n    };\n  }\n\n  StartGame() {\n    const unshuffledDeck = createDeck();\n    const deck = shuffleDeck(unshuffledDeck);\n    const hand1 = this.drawCards(5, deck);\n    const hand2 = this.drawCards(5, deck);\n    this.setState({\n      game: {\n        unshuffledDeck: unshuffledDeck,\n        deck: deck,\n        minBet: 100,\n        winner: null,\n        pot: 0\n      },\n      player1: {\n        player1Hand: hand1\n      },\n      player2: {\n        player2Hand: hand2\n      }\n    });\n  }\n\n  drawCards(numOfCards, deck) {\n    let hand = [];\n\n    for (let i = 0; i < numOfCards; i++) {\n      hand.push(deck.pop());\n    }\n\n    return hand;\n  }\n\n  displayResults() {\n    const _rateHand = rateHand(this.state.player1.player1Hand),\n          _rateHand2 = _slicedToArray(_rateHand, 2),\n          resultP1 = _rateHand2[0],\n          messageP1 = _rateHand2[1];\n\n    const _rateHand3 = rateHand(this.state.player2.player2Hand),\n          _rateHand4 = _slicedToArray(_rateHand3, 2),\n          resultP2 = _rateHand4[0],\n          messageP2 = _rateHand4[1];\n\n    const gameResult = resultP1 !== resultP2 ? resultP1 > resultP2 ? \"Player1\" : \"Player2\" : \"DRAW\";\n    this.setState({\n      winner: gameResult\n    });\n    console.log(`${gameResult} WINS, \n        Player 1: ${messageP1}, \n        Player 2: ${messageP2}`);\n  }\n\n  componentDidMount() {\n    this.StartGame();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Player, {\n      deck: this.state.game.deck,\n      player: this.state.player1.player1Hand,\n      minBet: this.state.game.minBet,\n      handleChange: this.handleChangeP1,\n      displayResults: this.displayResults,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Player, {\n      deck: this.state.game.deck,\n      player: this.state.player2.player2Hand,\n      minBet: this.state.game.minBet,\n      handleChange: this.handleChangeP2,\n      displayResults: this.displayResults,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/alexis_fiz/Desktop/poker-rect/src/component/Game.js"],"names":["React","Player","rateHand","createDeck","shuffleDeck","Game","Component","constructor","props","handleChangeP1","newHand","setState","player1","player1Hand","handleChangeP2","player2","player2Hand","state","game","unshuffledDeck","deck","winner","pot","minBet","StartGame","hand1","drawCards","hand2","numOfCards","hand","i","push","pop","displayResults","resultP1","messageP1","resultP2","messageP2","gameResult","console","log","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Player from './Player.js';\nimport {rateHand, createDeck, shuffleDeck} from '../help/help.js';\nimport './CSS-Playing-Cards/cards.css';\nimport './card.css';\n\nclass Game extends React.Component {  \n    constructor(props){\n        super(props);\n        this.state = {\n          game: {\n            unshuffledDeck: null,\n            deck: null,\n            winner: null,\n            pot: 0,\n            minBet: 100,\n          },\n          player1: {\n            player1Hand: [],\n          },\n          player2: {\n            player2Hand: [],\n          }\n        }\n    }\n    handleChangeP1 = (newHand) => {\n      this.setState({\n        player1: {\n          player1Hand: newHand\n        }\n      })\n    }\n    handleChangeP2 = (newHand) => {\n      this.setState({\n        player2: {\n          player2Hand: newHand\n        }\n      })\n    }\n\n    StartGame(){\n      const unshuffledDeck = createDeck();\n      const deck = shuffleDeck(unshuffledDeck);\n      const hand1 = this.drawCards(5, deck);\n      const hand2 = this.drawCards(5, deck);\n      this.setState({\n        game:{\n          unshuffledDeck: unshuffledDeck,\n          deck: deck,\n          minBet: 100,\n          winner: null,\n          pot: 0,\n        },\n        player1: {\n          player1Hand: hand1,\n        },\n        player2: {\n          player2Hand: hand2,\n        }\n      })\n    };\n    drawCards(numOfCards, deck){\n      let hand = [];\n        for (let i = 0; i < numOfCards; i++) {\n          hand.push(deck.pop());\n        }\n      return hand;\n    }\n    displayResults() {\n        const [resultP1, messageP1] = rateHand(this.state.player1.player1Hand);\n        const [resultP2, messageP2] = rateHand(this.state.player2.player2Hand);\n        const gameResult = resultP1 !== resultP2 ? \n            resultP1 > resultP2 ? \"Player1\" : \"Player2\" \n        : \"DRAW\";\n        this.setState({\n          winner: gameResult\n        });\n        console.log(`${gameResult} WINS, \n        Player 1: ${messageP1}, \n        Player 2: ${messageP2}`);\n    }\n    componentDidMount(){\n      this.StartGame();\n      }\n\n      render(){\n        return(\n          <div>\n            <Player \n            deck={this.state.game.deck} \n            player={this.state.player1.player1Hand} \n            minBet={this.state.game.minBet}\n            handleChange={this.handleChangeP1}\n            displayResults={this.displayResults}\n            />           \n            <Player \n            deck={this.state.game.deck} \n            player={this.state.player2.player2Hand} \n            minBet={this.state.game.minBet}\n            handleChange={this.handleChangeP2}\n            displayResults={this.displayResults}\n            />\n                      \n          </div>\n        );\n      }\n}\n\nexport default Game;\n\n\n \n\n\n"]},"metadata":{},"sourceType":"module"}