{"ast":null,"code":"var _jsxFileName = \"/Users/alexis_fiz/Desktop/poker-rect/src/component/Game.js\";\nimport React from 'react';\nimport Player from './Player.js';\nimport './CSS-Playing-Cards/cards.css';\nimport './card.css';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unshuffledDeck: null,\n      deck: null,\n      player1Hand: [],\n      player2Hand: [],\n      winner: null\n    };\n  }\n\n  StartGame() {\n    const undeck = this.createDeck();\n    const deck = this.shuffleDeck(undeck);\n    const hand1 = this.drawCards(5, deck);\n    const hand2 = this.drawCards(5, deck);\n    this.setState({\n      unshuffledDeck: undeck,\n      deck: deck,\n      player1Hand: hand1,\n      player2Hand: hand2,\n      winner: null\n    });\n  }\n\n  drawCards(numOfCards, deck) {\n    let hand = [];\n\n    for (let i = 0; i < numOfCards; i++) {\n      hand.push(deck.pop());\n    }\n\n    return hand;\n  }\n\n  groupByPair(hand) {\n    return this.groupHand(hand, 2);\n  }\n\n  groupByThree(hand) {\n    return this.groupHand(hand, 3);\n  }\n\n  groupByFour(hand) {\n    return this.groupHand(hand, 4);\n  }\n\n  hasAce(hand) {\n    return this.groupHandByWeight(hand).includes(14);\n  }\n\n  isFullHouse(hand) {\n    return this.groupByPair(hand).length === 1 && this.groupByThree(hand).length === 1;\n  }\n\n  isTwoPairs(hand) {\n    return this.groupByPair(hand).length === 2;\n  }\n\n  isPair(hand) {\n    return this.groupByPair(hand).length === 1;\n  }\n\n  isThreeofKind(hand) {\n    return this.groupByThree(hand).length === 1;\n  }\n\n  isFourOfKind(hand) {\n    return this.groupByFour(hand).length === 1;\n  }\n\n  isFlush(hand) {\n    return this.groupHandBySuit(hand).length === 1;\n  }\n\n  isHighCard(hand) {\n    return this.groupHandByWeight(hand).length === 5;\n  }\n\n  isStraightFlash(hand) {\n    return this.isFlush(hand) && this.isFiveInRow(hand);\n  }\n\n  isRoyalFlash(hand) {\n    return this.isFlush(hand) && this.isFiveInRow(hand) && this.hasAce(hand);\n  }\n\n  isFiveInRow(hand) {\n    let max = Math.max(...this.groupHandByWeight(hand));\n    let min = Math.min(...this.groupHandByWeight(hand));\n    return max - min === this.groupHandByWeight(hand).length - 1 && this.groupHandByWeight(hand).length === 5 ? true : false;\n  }\n\n  groupBy(list, grouper) {\n    const fGrouper = typeof grouper === 'function' ? grouper : item => item[grouper];\n    const fList = list instanceof Array ? list : Object.values(list);\n    return fList.reduce((groups, item) => {\n      const group = fGrouper(item);\n\n      if (!groups[group]) {\n        groups[group] = [];\n      }\n\n      groups[group].push(item);\n      return groups;\n    }, {});\n  }\n\n  groupHandBySuit(hand) {\n    return Object.keys(this.groupBy(hand, card => card.suit));\n  }\n\n  groupHandByWeight(hand) {\n    return Object.keys(this.groupBy(hand, card => card.weight)).map(cardWeight => parseInt(cardWeight));\n  }\n\n  groupHand(hand, num) {\n    return Object.values(this.groupBy(hand, card => card.rank)).filter(sameCards => sameCards.length === num);\n  }\n\n  rateHand(hand) {\n    switch (true) {\n      case this.isFullHouse(hand):\n        return \"You have a Full House\";\n\n      case this.isFourOfKind(hand):\n        return \"You have four of a kind\";\n\n      case this.isThreeofKind(hand):\n        return \"You have three of a kind\";\n\n      case this.isTwoPairs(hand):\n        return \"You have two pairs\";\n\n      case this.isPair(hand):\n        return \"You have a pair\";\n\n      case this.isRoyalFlash(hand):\n        return \"You have a Royal Flash\";\n\n      case this.isStraightFlash(hand):\n        return \"You have a Straight Flash\";\n\n      case this.isFlush(hand):\n        return \"You have a flash\";\n\n      case this.isFiveInRow(hand):\n        return \"You have a straight\";\n\n      case this.isHighCard(hand):\n        return \"No matching cards\";\n\n      default:\n        return \"No matching cards\";\n    }\n  }\n\n  createDeck() {\n    const SUITS = [\"spades\", \"diams\", \"clubs\", \"hearts\"];\n    const RANKS = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\n    const WEIGHT = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n    let undeck = [];\n\n    for (let i = 0; i < SUITS.length; i++) {\n      for (let j = 0; j < RANKS.length; j++) {\n        let card = {\n          rank: RANKS[j],\n          suit: SUITS[i],\n          weight: WEIGHT[j]\n        };\n        undeck.push(card);\n      }\n    }\n\n    return undeck;\n  }\n\n  shuffleDeck(deck) {\n    let m = deck.length,\n        currentElem,\n        remainElem;\n\n    while (m) {\n      remainElem = Math.floor(Math.random() * m--);\n      currentElem = deck[m];\n      deck[m] = deck[remainElem];\n      deck[remainElem] = currentElem;\n    }\n\n    return deck;\n  }\n\n  displayResults() {\n    setTimeout(() => {\n      alert(this.rateHand(this.state.player1Hand));\n      alert(this.rateHand(this.state.player2Hand));\n    }, 5000);\n  }\n\n  componentWillMount() {\n    this.StartGame();\n    this.displayResults();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Player, {\n      player: this.state.player1Hand,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(Player, {\n      player: this.state.player2Hand,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/alexis_fiz/Desktop/poker-rect/src/component/Game.js"],"names":["React","Player","Game","Component","constructor","props","state","unshuffledDeck","deck","player1Hand","player2Hand","winner","StartGame","undeck","createDeck","shuffleDeck","hand1","drawCards","hand2","setState","numOfCards","hand","i","push","pop","groupByPair","groupHand","groupByThree","groupByFour","hasAce","groupHandByWeight","includes","isFullHouse","length","isTwoPairs","isPair","isThreeofKind","isFourOfKind","isFlush","groupHandBySuit","isHighCard","isStraightFlash","isFiveInRow","isRoyalFlash","max","Math","min","groupBy","list","grouper","fGrouper","item","fList","Array","Object","values","reduce","groups","group","keys","card","suit","weight","map","cardWeight","parseInt","num","rank","filter","sameCards","rateHand","SUITS","RANKS","WEIGHT","j","m","currentElem","remainElem","floor","random","displayResults","setTimeout","alert","componentWillMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Player from './Player.js';\nimport './CSS-Playing-Cards/cards.css';\nimport './card.css';\n\nclass Game extends React.Component {  \n    constructor(props){\n        super(props);\n        this.state = {\n            unshuffledDeck: null,\n            deck: null,\n            player1Hand: [],\n            player2Hand: [],\n            winner: null\n        }\n        \n    }\n    StartGame(){\n      const undeck = this.createDeck();\n      const deck = this.shuffleDeck(undeck);\n      const hand1 = this.drawCards(5, deck);\n      const hand2 = this.drawCards(5, deck);\n      this.setState({\n        unshuffledDeck: undeck,\n        deck: deck,\n        player1Hand: hand1,\n        player2Hand: hand2,\n        winner: null\n      })\n    };\n    drawCards(numOfCards, deck){\n      let hand = [];\n        for (let i = 0; i < numOfCards; i++) {\n          hand.push(deck.pop());\n        }\n      return hand;\n    }\n    groupByPair(hand) {\n      return this.groupHand(hand, 2);\n    }\n    groupByThree(hand) {\n      return this.groupHand(hand, 3);\n    }  \n    groupByFour(hand) {\n      return this.groupHand(hand, 4);\n    }\n    hasAce(hand) {\n      return this.groupHandByWeight(hand).includes(14);\n    }\n    isFullHouse(hand) {\n      return this.groupByPair(hand).length === 1 && this.groupByThree(hand).length === 1;\n    }\n    isTwoPairs(hand) {\n      return this.groupByPair(hand).length === 2;\n    }\n    isPair(hand) {\n      return this.groupByPair(hand).length === 1;\n    }\n    isThreeofKind(hand) {\n      return this.groupByThree(hand).length === 1;\n    }\n    isFourOfKind(hand) {\n      return this.groupByFour(hand).length === 1;\n    }\n    isFlush(hand) {\n      return this.groupHandBySuit(hand).length === 1;\n    }\n    isHighCard(hand) {\n      return this.groupHandByWeight(hand).length === 5;\n    }\n    isStraightFlash(hand) {\n      return this.isFlush(hand) && this.isFiveInRow(hand);\n    }\n    isRoyalFlash(hand) {\n      return this.isFlush(hand) && this.isFiveInRow(hand) && this.hasAce(hand);\n    }\n    isFiveInRow(hand) {\n      let max = Math.max(...this.groupHandByWeight(hand)); \n      let min = Math.min(...this.groupHandByWeight(hand));\n      return max-min === this.groupHandByWeight(hand).length-1 && this.groupHandByWeight(hand).length === 5 ? true : false;\n    };\n    groupBy(list, grouper) {\n      const fGrouper = typeof grouper === 'function' ? grouper : item => item[grouper];\n      const fList = list instanceof Array ? list : Object.values(list);\n    \n      return fList.reduce(\n        (groups, item) => {\n          const group = fGrouper(item);\n          if (!groups[group]) {\n              groups[group] = []\n          }\n          groups[group].push(item)\n          return groups;\n        },\n        {}\n      )\n    }\n    groupHandBySuit(hand) {\n      return Object.keys(this.groupBy(hand, card => card.suit));\n    }\n    groupHandByWeight(hand) {\n      return Object.keys(this.groupBy(hand, card => card.weight)).map((cardWeight) => parseInt(cardWeight));\n    }\n    groupHand(hand,num) {\n      return Object.values(this.groupBy(hand, card => card.rank))\n      .filter(sameCards => sameCards.length === num);\n    }\n\n    rateHand(hand){\n      switch (true) {\n        case this.isFullHouse(hand):\n          return \"You have a Full House\";\n        case this.isFourOfKind(hand):\n          return \"You have four of a kind\";\n        case this.isThreeofKind(hand):\n          return \"You have three of a kind\";\n        case this.isTwoPairs(hand):\n          return \"You have two pairs\";\n        case this.isPair(hand):\n          return \"You have a pair\";\n          case this.isRoyalFlash(hand):\n          return \"You have a Royal Flash\";\n        case this.isStraightFlash(hand):\n          return \"You have a Straight Flash\";\n        case this.isFlush(hand):\n          return \"You have a flash\";\n        case this.isFiveInRow(hand):\n          return \"You have a straight\"\n        case this.isHighCard(hand):\n          return \"No matching cards\";\n        default:\n          return \"No matching cards\";\n      }\n    }\n    \n    createDeck() {\n        const SUITS = [\"spades\", \"diams\", \"clubs\", \"hearts\"];\n        const RANKS = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\n        const WEIGHT = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n        let undeck = [];\n        for (let i = 0; i < SUITS.length; i++) {\n          for (let j = 0; j < RANKS.length; j++){\n            let card = {rank: RANKS[j], suit: SUITS[i], weight: WEIGHT[j]};\n            undeck.push(card);\n          }\n        }\n        return undeck;\n    }\n    shuffleDeck(deck) {\n        let m = deck.length, currentElem, remainElem;\n          while (m) {\n            remainElem = Math.floor(Math.random() * m--);\n            currentElem = deck[m];\n            deck[m] = deck[remainElem];\n            deck[remainElem] = currentElem;\n        } \n        return deck;\n      } \n    displayResults() {\n      setTimeout(()=> {\n        alert(this.rateHand(this.state.player1Hand));\n        alert(this.rateHand(this.state.player2Hand));\n      }, 5000);\n    }  \n\n      \n       componentWillMount(){\n         this.StartGame();\n         this.displayResults();  \n       }\n\n      render(){\n        return(\n          <div>\n            <Player player={this.state.player1Hand}/>\n            <Player player={this.state.player2Hand}/>      \n          </div>\n        );\n      }\n}\n\nexport default Game;\n\n\n \n\n\n"]},"metadata":{},"sourceType":"module"}