{"ast":null,"code":"var _jsxFileName = \"/Users/alexis_fiz/Desktop/poker-rect/src/component/Game.js\";\nimport React from 'react';\nimport Player from './Player.js';\nimport './CSS-Playing-Cards/cards.css';\nimport './card.css';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unshuffledDeck: null,\n      deck: null,\n      player1Hand: [],\n      player2Hand: [],\n      winner: null,\n      pot: 0,\n      minBet: 100\n    };\n  }\n\n  groupByPair(hand) {\n    return this.groupHand(hand, 2);\n  }\n\n  groupByThree(hand) {\n    return this.groupHand(hand, 3);\n  }\n\n  groupByFour(hand) {\n    return this.groupHand(hand, 4);\n  }\n\n  hasAce(hand) {\n    return this.groupHandByWeight(hand).includes(14);\n  }\n\n  isFullHouse(hand) {\n    return this.groupByPair(hand).length === 1 && this.groupByThree(hand).length === 1;\n  }\n\n  isTwoPairs(hand) {\n    return this.groupByPair(hand).length === 2;\n  }\n\n  isPair(hand) {\n    return this.groupByPair(hand).length === 1;\n  }\n\n  isThreeofKind(hand) {\n    return this.groupByThree(hand).length === 1;\n  }\n\n  isFourOfKind(hand) {\n    return this.groupByFour(hand).length === 1;\n  }\n\n  isFlush(hand) {\n    return this.groupHandBySuit(hand).length === 1;\n  }\n\n  isHighCard(hand) {\n    return this.groupHandByWeight(hand).length === 5;\n  }\n\n  isStraightFlash(hand) {\n    return this.isFlush(hand) && this.isFiveInRow(hand);\n  }\n\n  isRoyalFlash(hand) {\n    return this.isFlush(hand) && this.isFiveInRow(hand) && this.hasAce(hand);\n  }\n\n  isFiveInRow(hand) {\n    let max = Math.max(...this.groupHandByWeight(hand));\n    let min = Math.min(...this.groupHandByWeight(hand));\n    return max - min === this.groupHandByWeight(hand).length - 1 && this.groupHandByWeight(hand).length === 5 ? true : false;\n  }\n\n  groupBy(list, grouper) {\n    const fGrouper = typeof grouper === 'function' ? grouper : item => item[grouper];\n    const fList = list instanceof Array ? list : Object.values(list);\n    return fList.reduce((groups, item) => {\n      const group = fGrouper(item);\n\n      if (!groups[group]) {\n        groups[group] = [];\n      }\n\n      groups[group].push(item);\n      return groups;\n    }, {});\n  }\n\n  groupHandBySuit(hand) {\n    return Object.keys(this.groupBy(hand, card => card.suit));\n  }\n\n  groupHandByWeight(hand) {\n    return Object.keys(this.groupBy(hand, card => card.weight)).map(cardWeight => parseInt(cardWeight));\n  }\n\n  groupHand(hand, num) {\n    return Object.values(this.groupBy(hand, card => card.rank)).filter(sameCards => sameCards.length === num);\n  }\n\n  rateHand(hand) {\n    switch (true) {\n      case this.isFullHouse(hand):\n        return \"You have a Full House\";\n\n      case this.isFourOfKind(hand):\n        return \"You have four of a kind\";\n\n      case this.isThreeofKind(hand):\n        return \"You have three of a kind\";\n\n      case this.isTwoPairs(hand):\n        return \"You have two pairs\";\n\n      case this.isPair(hand):\n        return \"You have a pair\";\n\n      case this.isRoyalFlash(hand):\n        return \"You have a Royal Flash\";\n\n      case this.isStraightFlash(hand):\n        return \"You have a Straight Flash\";\n\n      case this.isFlush(hand):\n        return \"You have a flash\";\n\n      case this.isFiveInRow(hand):\n        return \"You have a straight\";\n\n      case this.isHighCard(hand):\n        return \"No matching cards\";\n\n      default:\n        return \"No matching cards\";\n    }\n  }\n\n  createDeck() {\n    const SUITS = [\"spades\", \"diams\", \"clubs\", \"hearts\"];\n    const RANKS = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\n    const WEIGHT = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n    let undeck = [];\n\n    for (let i = 0; i < SUITS.length; i++) {\n      for (let j = 0; j < RANKS.length; j++) {\n        let card = {\n          rank: RANKS[j],\n          suit: SUITS[i],\n          weight: WEIGHT[j]\n        };\n        undeck.push(card);\n      }\n    }\n\n    return undeck;\n  }\n\n  shuffleDeck(deck) {\n    let m = deck.length,\n        currentElem,\n        remainElem;\n\n    while (m) {\n      remainElem = Math.floor(Math.random() * m--);\n      currentElem = deck[m];\n      deck[m] = deck[remainElem];\n      deck[remainElem] = currentElem;\n    }\n\n    return deck;\n  }\n\n  StartGame() {\n    const unshuffledDeck = this.createDeck();\n    const deck = this.shuffleDeck(unshuffledDeck);\n    const hand1 = this.drawCards(5, deck);\n    const hand2 = this.drawCards(5, deck);\n    this.setState({\n      unshuffledDeck: unshuffledDeck,\n      deck: deck,\n      player1Hand: hand1,\n      player2Hand: hand2,\n      winner: null\n    });\n  }\n\n  drawCards(numOfCards, deck) {\n    let hand = [];\n    let tempDeck = [...deck];\n\n    for (let i = 0; i < numOfCards; i++) {\n      hand.push(tempDeck.pop());\n    }\n\n    this.setState({\n      deck: tempDeck\n    });\n    return hand;\n  }\n\n  displayResults() {\n    setTimeout(() => {\n      console.log(this.rateHand(this.state.player1Hand));\n      console.log(this.rateHand(this.state.player2Hand));\n    }, 5000);\n  }\n\n  reDraw(hand, numofCards) {\n    const tempDeck = [...this.state.deck];\n    const tempHand = [...hand];\n    let cardsInHand = hand.length + numofCards;\n\n    if (cardsInHand === 5) {\n      for (let i = 0; i < numofCards; i++) {\n        tempHand.pop();\n        tempHand.push(tempDeck);\n      }\n    }\n\n    this.setState({\n      deck: tempDeck,\n      hand: tempHand\n    });\n  }\n\n  componentWillMount() {\n    this.StartGame();\n    this.displayResults();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Player, {\n      player: this.state.player1Hand,\n      minBet: this.state.minBet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(Player, {\n      player: this.state.player2Hand,\n      minBet: this.state.minBet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/alexis_fiz/Desktop/poker-rect/src/component/Game.js"],"names":["React","Player","Game","Component","constructor","props","state","unshuffledDeck","deck","player1Hand","player2Hand","winner","pot","minBet","groupByPair","hand","groupHand","groupByThree","groupByFour","hasAce","groupHandByWeight","includes","isFullHouse","length","isTwoPairs","isPair","isThreeofKind","isFourOfKind","isFlush","groupHandBySuit","isHighCard","isStraightFlash","isFiveInRow","isRoyalFlash","max","Math","min","groupBy","list","grouper","fGrouper","item","fList","Array","Object","values","reduce","groups","group","push","keys","card","suit","weight","map","cardWeight","parseInt","num","rank","filter","sameCards","rateHand","createDeck","SUITS","RANKS","WEIGHT","undeck","i","j","shuffleDeck","m","currentElem","remainElem","floor","random","StartGame","hand1","drawCards","hand2","setState","numOfCards","tempDeck","pop","displayResults","setTimeout","console","log","reDraw","numofCards","tempHand","cardsInHand","componentWillMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAO,+BAAP;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE,IADP;AAETC,MAAAA,IAAI,EAAE,IAFG;AAGTC,MAAAA,WAAW,EAAE,EAHJ;AAITC,MAAAA,WAAW,EAAE,EAJJ;AAKTC,MAAAA,MAAM,EAAE,IALC;AAMTC,MAAAA,GAAG,EAAE,CANI;AAOTC,MAAAA,MAAM,EAAE;AAPC,KAAb;AAUH;;AACDC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAChB,WAAO,KAAKC,SAAL,CAAeD,IAAf,EAAqB,CAArB,CAAP;AACD;;AACDE,EAAAA,YAAY,CAACF,IAAD,EAAO;AACjB,WAAO,KAAKC,SAAL,CAAeD,IAAf,EAAqB,CAArB,CAAP;AACD;;AACDG,EAAAA,WAAW,CAACH,IAAD,EAAO;AAChB,WAAO,KAAKC,SAAL,CAAeD,IAAf,EAAqB,CAArB,CAAP;AACD;;AACDI,EAAAA,MAAM,CAACJ,IAAD,EAAO;AACX,WAAO,KAAKK,iBAAL,CAAuBL,IAAvB,EAA6BM,QAA7B,CAAsC,EAAtC,CAAP;AACD;;AACDC,EAAAA,WAAW,CAACP,IAAD,EAAO;AAChB,WAAO,KAAKD,WAAL,CAAiBC,IAAjB,EAAuBQ,MAAvB,KAAkC,CAAlC,IAAuC,KAAKN,YAAL,CAAkBF,IAAlB,EAAwBQ,MAAxB,KAAmC,CAAjF;AACD;;AACDC,EAAAA,UAAU,CAACT,IAAD,EAAO;AACf,WAAO,KAAKD,WAAL,CAAiBC,IAAjB,EAAuBQ,MAAvB,KAAkC,CAAzC;AACD;;AACDE,EAAAA,MAAM,CAACV,IAAD,EAAO;AACX,WAAO,KAAKD,WAAL,CAAiBC,IAAjB,EAAuBQ,MAAvB,KAAkC,CAAzC;AACD;;AACDG,EAAAA,aAAa,CAACX,IAAD,EAAO;AAClB,WAAO,KAAKE,YAAL,CAAkBF,IAAlB,EAAwBQ,MAAxB,KAAmC,CAA1C;AACD;;AACDI,EAAAA,YAAY,CAACZ,IAAD,EAAO;AACjB,WAAO,KAAKG,WAAL,CAAiBH,IAAjB,EAAuBQ,MAAvB,KAAkC,CAAzC;AACD;;AACDK,EAAAA,OAAO,CAACb,IAAD,EAAO;AACZ,WAAO,KAAKc,eAAL,CAAqBd,IAArB,EAA2BQ,MAA3B,KAAsC,CAA7C;AACD;;AACDO,EAAAA,UAAU,CAACf,IAAD,EAAO;AACf,WAAO,KAAKK,iBAAL,CAAuBL,IAAvB,EAA6BQ,MAA7B,KAAwC,CAA/C;AACD;;AACDQ,EAAAA,eAAe,CAAChB,IAAD,EAAO;AACpB,WAAO,KAAKa,OAAL,CAAab,IAAb,KAAsB,KAAKiB,WAAL,CAAiBjB,IAAjB,CAA7B;AACD;;AACDkB,EAAAA,YAAY,CAAClB,IAAD,EAAO;AACjB,WAAO,KAAKa,OAAL,CAAab,IAAb,KAAsB,KAAKiB,WAAL,CAAiBjB,IAAjB,CAAtB,IAAgD,KAAKI,MAAL,CAAYJ,IAAZ,CAAvD;AACD;;AACDiB,EAAAA,WAAW,CAACjB,IAAD,EAAO;AAChB,QAAImB,GAAG,GAAGC,IAAI,CAACD,GAAL,CAAS,GAAG,KAAKd,iBAAL,CAAuBL,IAAvB,CAAZ,CAAV;AACA,QAAIqB,GAAG,GAAGD,IAAI,CAACC,GAAL,CAAS,GAAG,KAAKhB,iBAAL,CAAuBL,IAAvB,CAAZ,CAAV;AACA,WAAOmB,GAAG,GAACE,GAAJ,KAAY,KAAKhB,iBAAL,CAAuBL,IAAvB,EAA6BQ,MAA7B,GAAoC,CAAhD,IAAqD,KAAKH,iBAAL,CAAuBL,IAAvB,EAA6BQ,MAA7B,KAAwC,CAA7F,GAAiG,IAAjG,GAAwG,KAA/G;AACD;;AACDc,EAAAA,OAAO,CAACC,IAAD,EAAOC,OAAP,EAAgB;AACrB,UAAMC,QAAQ,GAAG,OAAOD,OAAP,KAAmB,UAAnB,GAAgCA,OAAhC,GAA0CE,IAAI,IAAIA,IAAI,CAACF,OAAD,CAAvE;AACA,UAAMG,KAAK,GAAGJ,IAAI,YAAYK,KAAhB,GAAwBL,IAAxB,GAA+BM,MAAM,CAACC,MAAP,CAAcP,IAAd,CAA7C;AAEA,WAAOI,KAAK,CAACI,MAAN,CACL,CAACC,MAAD,EAASN,IAAT,KAAkB;AAChB,YAAMO,KAAK,GAAGR,QAAQ,CAACC,IAAD,CAAtB;;AACA,UAAI,CAACM,MAAM,CAACC,KAAD,CAAX,EAAoB;AAChBD,QAAAA,MAAM,CAACC,KAAD,CAAN,GAAgB,EAAhB;AACH;;AACDD,MAAAA,MAAM,CAACC,KAAD,CAAN,CAAcC,IAAd,CAAmBR,IAAnB;AACA,aAAOM,MAAP;AACD,KARI,EASL,EATK,CAAP;AAWD;;AACDlB,EAAAA,eAAe,CAACd,IAAD,EAAO;AACpB,WAAO6B,MAAM,CAACM,IAAP,CAAY,KAAKb,OAAL,CAAatB,IAAb,EAAmBoC,IAAI,IAAIA,IAAI,CAACC,IAAhC,CAAZ,CAAP;AACD;;AACDhC,EAAAA,iBAAiB,CAACL,IAAD,EAAO;AACtB,WAAO6B,MAAM,CAACM,IAAP,CAAY,KAAKb,OAAL,CAAatB,IAAb,EAAmBoC,IAAI,IAAIA,IAAI,CAACE,MAAhC,CAAZ,EAAqDC,GAArD,CAA0DC,UAAD,IAAgBC,QAAQ,CAACD,UAAD,CAAjF,CAAP;AACD;;AACDvC,EAAAA,SAAS,CAACD,IAAD,EAAM0C,GAAN,EAAW;AAClB,WAAOb,MAAM,CAACC,MAAP,CAAc,KAAKR,OAAL,CAAatB,IAAb,EAAmBoC,IAAI,IAAIA,IAAI,CAACO,IAAhC,CAAd,EACNC,MADM,CACCC,SAAS,IAAIA,SAAS,CAACrC,MAAV,KAAqBkC,GADnC,CAAP;AAED;;AAEDI,EAAAA,QAAQ,CAAC9C,IAAD,EAAM;AACZ,YAAQ,IAAR;AACE,WAAK,KAAKO,WAAL,CAAiBP,IAAjB,CAAL;AACE,eAAO,uBAAP;;AACF,WAAK,KAAKY,YAAL,CAAkBZ,IAAlB,CAAL;AACE,eAAO,yBAAP;;AACF,WAAK,KAAKW,aAAL,CAAmBX,IAAnB,CAAL;AACE,eAAO,0BAAP;;AACF,WAAK,KAAKS,UAAL,CAAgBT,IAAhB,CAAL;AACE,eAAO,oBAAP;;AACF,WAAK,KAAKU,MAAL,CAAYV,IAAZ,CAAL;AACE,eAAO,iBAAP;;AACA,WAAK,KAAKkB,YAAL,CAAkBlB,IAAlB,CAAL;AACA,eAAO,wBAAP;;AACF,WAAK,KAAKgB,eAAL,CAAqBhB,IAArB,CAAL;AACE,eAAO,2BAAP;;AACF,WAAK,KAAKa,OAAL,CAAab,IAAb,CAAL;AACE,eAAO,kBAAP;;AACF,WAAK,KAAKiB,WAAL,CAAiBjB,IAAjB,CAAL;AACE,eAAO,qBAAP;;AACF,WAAK,KAAKe,UAAL,CAAgBf,IAAhB,CAAL;AACE,eAAO,mBAAP;;AACF;AACE,eAAO,mBAAP;AAtBJ;AAwBD;;AAED+C,EAAAA,UAAU,GAAG;AACT,UAAMC,KAAK,GAAG,CAAC,QAAD,EAAW,OAAX,EAAoB,OAApB,EAA6B,QAA7B,CAAd;AACA,UAAMC,KAAK,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,IAAzC,EAA+C,GAA/C,EAAoD,GAApD,EAAyD,GAAzD,EAA8D,GAA9D,CAAd;AACA,UAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,CAAf;AACA,QAAIC,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACxC,MAA1B,EAAkC4C,CAAC,EAAnC,EAAuC;AACrC,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACzC,MAA1B,EAAkC6C,CAAC,EAAnC,EAAsC;AACpC,YAAIjB,IAAI,GAAG;AAACO,UAAAA,IAAI,EAAEM,KAAK,CAACI,CAAD,CAAZ;AAAiBhB,UAAAA,IAAI,EAAEW,KAAK,CAACI,CAAD,CAA5B;AAAiCd,UAAAA,MAAM,EAAEY,MAAM,CAACG,CAAD;AAA/C,SAAX;AACAF,QAAAA,MAAM,CAACjB,IAAP,CAAYE,IAAZ;AACD;AACF;;AACD,WAAOe,MAAP;AACH;;AACDG,EAAAA,WAAW,CAAC7D,IAAD,EAAO;AACd,QAAI8D,CAAC,GAAG9D,IAAI,CAACe,MAAb;AAAA,QAAqBgD,WAArB;AAAA,QAAkCC,UAAlC;;AACE,WAAOF,CAAP,EAAU;AACRE,MAAAA,UAAU,GAAGrC,IAAI,CAACsC,KAAL,CAAWtC,IAAI,CAACuC,MAAL,KAAgBJ,CAAC,EAA5B,CAAb;AACAC,MAAAA,WAAW,GAAG/D,IAAI,CAAC8D,CAAD,CAAlB;AACA9D,MAAAA,IAAI,CAAC8D,CAAD,CAAJ,GAAU9D,IAAI,CAACgE,UAAD,CAAd;AACAhE,MAAAA,IAAI,CAACgE,UAAD,CAAJ,GAAmBD,WAAnB;AACH;;AACD,WAAO/D,IAAP;AACD;;AACHmE,EAAAA,SAAS,GAAE;AACT,UAAMpE,cAAc,GAAG,KAAKuD,UAAL,EAAvB;AACA,UAAMtD,IAAI,GAAG,KAAK6D,WAAL,CAAiB9D,cAAjB,CAAb;AACA,UAAMqE,KAAK,GAAG,KAAKC,SAAL,CAAe,CAAf,EAAkBrE,IAAlB,CAAd;AACA,UAAMsE,KAAK,GAAG,KAAKD,SAAL,CAAe,CAAf,EAAkBrE,IAAlB,CAAd;AACA,SAAKuE,QAAL,CAAc;AACZxE,MAAAA,cAAc,EAAEA,cADJ;AAEZC,MAAAA,IAAI,EAAEA,IAFM;AAGZC,MAAAA,WAAW,EAAEmE,KAHD;AAIZlE,MAAAA,WAAW,EAAEoE,KAJD;AAKZnE,MAAAA,MAAM,EAAE;AALI,KAAd;AAOD;;AACDkE,EAAAA,SAAS,CAACG,UAAD,EAAaxE,IAAb,EAAkB;AACzB,QAAIO,IAAI,GAAG,EAAX;AACA,QAAIkE,QAAQ,GAAG,CAAC,GAAGzE,IAAJ,CAAf;;AACE,SAAK,IAAI2D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGa,UAApB,EAAgCb,CAAC,EAAjC,EAAqC;AACnCpD,MAAAA,IAAI,CAACkC,IAAL,CAAUgC,QAAQ,CAACC,GAAT,EAAV;AACD;;AACD,SAAKH,QAAL,CAAc;AACZvE,MAAAA,IAAI,EAAEyE;AADM,KAAd;AAGA,WAAOlE,IAAP;AACD;;AACHoE,EAAAA,cAAc,GAAG;AACfC,IAAAA,UAAU,CAAC,MAAK;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzB,QAAL,CAAc,KAAKvD,KAAL,CAAWG,WAAzB,CAAZ;AACA4E,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzB,QAAL,CAAc,KAAKvD,KAAL,CAAWI,WAAzB,CAAZ;AACD,KAHS,EAGP,IAHO,CAAV;AAID;;AAED6E,EAAAA,MAAM,CAACxE,IAAD,EAAOyE,UAAP,EAAkB;AACtB,UAAMP,QAAQ,GAAG,CAAC,GAAG,KAAK3E,KAAL,CAAWE,IAAf,CAAjB;AACA,UAAMiF,QAAQ,GAAG,CAAC,GAAG1E,IAAJ,CAAjB;AACA,QAAI2E,WAAW,GAAG3E,IAAI,CAACQ,MAAL,GAAciE,UAAhC;;AACA,QAAGE,WAAW,KAAK,CAAnB,EAAqB;AACnB,WAAI,IAAIvB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACqB,UAAd,EAAyBrB,CAAC,EAA1B,EAA6B;AAC7BsB,QAAAA,QAAQ,CAACP,GAAT;AACAO,QAAAA,QAAQ,CAACxC,IAAT,CAAcgC,QAAd;AACC;AACF;;AACD,SAAKF,QAAL,CAAc;AACZvE,MAAAA,IAAI,EAAEyE,QADM;AAEZlE,MAAAA,IAAI,EAAE0E;AAFM,KAAd;AAKD;;AAEDE,EAAAA,kBAAkB,GAAE;AAClB,SAAKhB,SAAL;AACA,SAAKQ,cAAL;AACC;;AAEDS,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,KAAKtF,KAAL,CAAWG,WAA3B;AAAwC,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWO,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWI,WAA3B;AAAwC,MAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWO,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAnM4B;;AAsMnC,eAAeX,IAAf","sourcesContent":["import React from 'react';\nimport Player from './Player.js';\nimport './CSS-Playing-Cards/cards.css';\nimport './card.css';\n\nclass Game extends React.Component {  \n    constructor(props){\n        super(props);\n        this.state = {\n            unshuffledDeck: null,\n            deck: null,\n            player1Hand: [],\n            player2Hand: [],\n            winner: null,\n            pot: 0,\n            minBet: 100,\n        }\n        \n    }\n    groupByPair(hand) {\n      return this.groupHand(hand, 2);\n    }\n    groupByThree(hand) {\n      return this.groupHand(hand, 3);\n    }  \n    groupByFour(hand) {\n      return this.groupHand(hand, 4);\n    }\n    hasAce(hand) {\n      return this.groupHandByWeight(hand).includes(14);\n    }\n    isFullHouse(hand) {\n      return this.groupByPair(hand).length === 1 && this.groupByThree(hand).length === 1;\n    }\n    isTwoPairs(hand) {\n      return this.groupByPair(hand).length === 2;\n    }\n    isPair(hand) {\n      return this.groupByPair(hand).length === 1;\n    }\n    isThreeofKind(hand) {\n      return this.groupByThree(hand).length === 1;\n    }\n    isFourOfKind(hand) {\n      return this.groupByFour(hand).length === 1;\n    }\n    isFlush(hand) {\n      return this.groupHandBySuit(hand).length === 1;\n    }\n    isHighCard(hand) {\n      return this.groupHandByWeight(hand).length === 5;\n    }\n    isStraightFlash(hand) {\n      return this.isFlush(hand) && this.isFiveInRow(hand);\n    }\n    isRoyalFlash(hand) {\n      return this.isFlush(hand) && this.isFiveInRow(hand) && this.hasAce(hand);\n    }\n    isFiveInRow(hand) {\n      let max = Math.max(...this.groupHandByWeight(hand)); \n      let min = Math.min(...this.groupHandByWeight(hand));\n      return max-min === this.groupHandByWeight(hand).length-1 && this.groupHandByWeight(hand).length === 5 ? true : false;\n    };\n    groupBy(list, grouper) {\n      const fGrouper = typeof grouper === 'function' ? grouper : item => item[grouper];\n      const fList = list instanceof Array ? list : Object.values(list);\n    \n      return fList.reduce(\n        (groups, item) => {\n          const group = fGrouper(item);\n          if (!groups[group]) {\n              groups[group] = []\n          }\n          groups[group].push(item)\n          return groups;\n        },\n        {}\n      )\n    }\n    groupHandBySuit(hand) {\n      return Object.keys(this.groupBy(hand, card => card.suit));\n    }\n    groupHandByWeight(hand) {\n      return Object.keys(this.groupBy(hand, card => card.weight)).map((cardWeight) => parseInt(cardWeight));\n    }\n    groupHand(hand,num) {\n      return Object.values(this.groupBy(hand, card => card.rank))\n      .filter(sameCards => sameCards.length === num);\n    }\n\n    rateHand(hand){\n      switch (true) {\n        case this.isFullHouse(hand):\n          return \"You have a Full House\";\n        case this.isFourOfKind(hand):\n          return \"You have four of a kind\";\n        case this.isThreeofKind(hand):\n          return \"You have three of a kind\";\n        case this.isTwoPairs(hand):\n          return \"You have two pairs\";\n        case this.isPair(hand):\n          return \"You have a pair\";\n          case this.isRoyalFlash(hand):\n          return \"You have a Royal Flash\";\n        case this.isStraightFlash(hand):\n          return \"You have a Straight Flash\";\n        case this.isFlush(hand):\n          return \"You have a flash\";\n        case this.isFiveInRow(hand):\n          return \"You have a straight\"\n        case this.isHighCard(hand):\n          return \"No matching cards\";\n        default:\n          return \"No matching cards\";\n      }\n    }\n    \n    createDeck() {\n        const SUITS = [\"spades\", \"diams\", \"clubs\", \"hearts\"];\n        const RANKS = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\n        const WEIGHT = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n        let undeck = [];\n        for (let i = 0; i < SUITS.length; i++) {\n          for (let j = 0; j < RANKS.length; j++){\n            let card = {rank: RANKS[j], suit: SUITS[i], weight: WEIGHT[j]};\n            undeck.push(card);\n          }\n        }\n        return undeck;\n    }\n    shuffleDeck(deck) {\n        let m = deck.length, currentElem, remainElem;\n          while (m) {\n            remainElem = Math.floor(Math.random() * m--);\n            currentElem = deck[m];\n            deck[m] = deck[remainElem];\n            deck[remainElem] = currentElem;\n        } \n        return deck;\n      }\n    StartGame(){\n      const unshuffledDeck = this.createDeck();\n      const deck = this.shuffleDeck(unshuffledDeck);\n      const hand1 = this.drawCards(5, deck);\n      const hand2 = this.drawCards(5, deck);\n      this.setState({\n        unshuffledDeck: unshuffledDeck,\n        deck: deck,\n        player1Hand: hand1,\n        player2Hand: hand2,\n        winner: null\n      })\n    };\n    drawCards(numOfCards, deck){\n      let hand = [];\n      let tempDeck = [...deck];\n        for (let i = 0; i < numOfCards; i++) {\n          hand.push(tempDeck.pop());\n        }\n        this.setState({\n          deck: tempDeck\n        });\n        return hand;\n      }\n    displayResults() {\n      setTimeout(()=> {\n        console.log(this.rateHand(this.state.player1Hand));\n        console.log(this.rateHand(this.state.player2Hand));\n      }, 5000);\n    }\n\n    reDraw(hand, numofCards){\n      const tempDeck = [...this.state.deck];\n      const tempHand = [...hand];\n      let cardsInHand = hand.length + numofCards;\n      if(cardsInHand === 5){\n        for(let i=0;i<numofCards;i++){\n        tempHand.pop();\n        tempHand.push(tempDeck);\n        }\n      }\n      this.setState({\n        deck: tempDeck,\n        hand: tempHand,\n      });\n      \n    }\n      \n    componentWillMount(){\n      this.StartGame();\n      this.displayResults();  \n      }\n\n      render(){\n        return(\n          <div>\n            <Player player={this.state.player1Hand} minBet={this.state.minBet}/>           \n            <Player player={this.state.player2Hand} minBet={this.state.minBet}/>      \n          </div>\n        );\n      }\n}\n\nexport default Game;\n\n\n \n\n\n"]},"metadata":{},"sourceType":"module"}