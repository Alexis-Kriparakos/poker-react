{"ast":null,"code":"var _jsxFileName = \"/Users/alexis_fiz/Desktop/poker-rect/src/component/Game.js\";\nimport React from 'react';\nimport Hand from './Hand.js';\nimport './CSS-Playing-Cards/cards.css';\nconst SUITS = [\"spades\", \"diamonds\", \"clubs\", \"hearts\"];\nconst RANKS = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\nconst WEIGHT = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unshuffledDeck: null,\n      deck: null,\n      player1Hand: null,\n      player2Hand: null,\n      winner: null\n    };\n  }\n\n  createDeck() {\n    let deck = new Array();\n\n    for (let i = 0; i < SUITS.length; i++) {\n      for (let j = 0; j < RANKS.length; j++) {\n        let card = {\n          rank: RANKS[j],\n          suit: SUITS[i],\n          weight: WEIGHT[j]\n        };\n        deck.push(card);\n      }\n    }\n\n    this.setState({\n      unshuffledDeck: deck\n    });\n    return deck;\n  }\n\n  shuffleDeck(deck) {\n    let m = deck.length,\n        currentElem,\n        remainElem;\n\n    while (m) {\n      remainElem = Math.floor(Math.random() * m--);\n      currentElem = deck[m];\n      deck[m] = deck[remainElem];\n      deck[remainElem] = currentElem;\n    }\n\n    this.setState({\n      deck: deck\n    });\n    return deck;\n  }\n\n  drawCards(numOfCards, hand) {\n    for (let i = 0; i < numOfCards; i++) {\n      hand.push(deck.pop());\n    }\n\n    return hand;\n  }\n\n  render() {\n    this.createDeck();\n    this.shuffleDeck(this.state.unshuffledDeck);\n    return React.createElement(Hand, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/alexis_fiz/Desktop/poker-rect/src/component/Game.js"],"names":["React","Hand","SUITS","RANKS","WEIGHT","Game","Component","constructor","props","state","unshuffledDeck","deck","player1Hand","player2Hand","winner","createDeck","Array","i","length","j","card","rank","suit","weight","push","setState","shuffleDeck","m","currentElem","remainElem","Math","floor","random","drawCards","numOfCards","hand","pop","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Hand from './Hand.js';\nimport './CSS-Playing-Cards/cards.css';\n\n\nconst SUITS = [\"spades\", \"diamonds\", \"clubs\", \"hearts\"];\nconst RANKS = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\nconst WEIGHT = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n\n\nclass Game extends React.Component {\n  \n    constructor(props){\n        super(props);\n        this.state = {\n            unshuffledDeck: null,\n            deck: null,\n            player1Hand: null,\n            player2Hand: null,\n            winner: null\n        }\n    }\n    createDeck() {\n        let deck = new Array();\n        for (let i = 0; i < SUITS.length; i++) {\n          for (let j = 0; j < RANKS.length; j++){\n            let card = {rank: RANKS[j], suit: SUITS[i], weight: WEIGHT[j]};\n            deck.push(card);\n          }\n        }\n        this.setState({\n          unshuffledDeck: deck,\n        });\n        return deck;\n    }\n    shuffleDeck(deck) {\n        let m = deck.length, currentElem, remainElem;\n          while (m) {\n            remainElem = Math.floor(Math.random() * m--);\n            currentElem = deck[m];\n            deck[m] = deck[remainElem];\n            deck[remainElem] = currentElem;\n        } \n        this.setState({\n          deck: deck\n        });\n        return deck;\n      }\n      drawCards(numOfCards, hand) {\n        for (let i = 0; i < numOfCards; i++) {\n          hand.push(deck.pop());\n        }\n        return hand;\n      }\n\n      render(){\n        this.createDeck();\n        this.shuffleDeck(this.state.unshuffledDeck);\n        return(\n          <Hand />\n        );\n      }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}