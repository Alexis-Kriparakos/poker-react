{"ast":null,"code":"var _jsxFileName = \"/Users/alexis_fiz/Desktop/poker-rect/src/component/player/Player.js\";\nimport React from 'react';\nimport Card from '../card';\nimport './styles/cards.css';\nimport '';\n\nclass Player extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      money: 5000,\n      bet: 100,\n      canPlay: false,\n      joinedTable: false,\n      canChangeCards: 0\n    };\n    this.bidMoney = this.bidMoney.bind(this);\n    this.joinTable = this.joinTable.bind(this);\n  }\n\n  joinTable() {\n    if (this.state.money >= this.props.minBet && !this.state.joinedTable) {\n      let newMoney = this.state.money - this.props.minBet;\n      this.setState({\n        money: newMoney,\n        canPlay: true,\n        joinedTable: true\n      });\n    }\n  }\n\n  bidMoney() {\n    if (this.state.money - 50 >= 0 && this.state.joinedTable) {\n      let newBet = this.state.bet + 50;\n      let newBudget = this.state.money - 50;\n      this.setState({\n        money: newBudget,\n        bet: newBet\n      });\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          money = _this$state.money,\n          bet = _this$state.bet,\n          bidMoney = _this$state.bidMoney;\n    const cardsInHand = this.props.player.map((card, key) => React.createElement(Card, {\n      key: key,\n      card: card,\n      index: key,\n      handleChange: this.props.handleChange,\n      deck: this.props.deck,\n      hand: this.props.player,\n      canPlay: this.state.canPlay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Current Money: \", this.state.money), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Current Bet: \", this.state.bet), React.createElement(\"button\", {\n      onClick: this.bidMoney,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Bid\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"hand_position\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, cardsInHand), React.createElement(\"div\", {\n      className: \"button__container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.joinTable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Join Table\"), React.createElement(\"button\", {\n      onClick: this.props.displayResults,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Call\"))));\n  }\n\n}\n\n;\nexport default Player;","map":{"version":3,"sources":["/Users/alexis_fiz/Desktop/poker-rect/src/component/player/Player.js"],"names":["React","Card","Player","Component","constructor","props","state","money","bet","canPlay","joinedTable","canChangeCards","bidMoney","bind","joinTable","minBet","newMoney","setState","newBet","newBudget","render","cardsInHand","player","map","card","key","handleChange","deck","displayResults"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAO,oBAAP;AACA,OAAO,EAAP;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACVC,MAAAA,KAAK,EAAE,IADG;AAEVC,MAAAA,GAAG,EAAE,GAFK;AAGVC,MAAAA,OAAO,EAAE,KAHC;AAIVC,MAAAA,WAAW,EAAE,KAJH;AAKVC,MAAAA,cAAc,EAAE;AALN,KAAb;AAOA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACF;;AACDC,EAAAA,SAAS,GAAG;AACT,QAAG,KAAKR,KAAL,CAAWC,KAAX,IAAoB,KAAKF,KAAL,CAAWU,MAA/B,IAAyC,CAAC,KAAKT,KAAL,CAAWI,WAAxD,EAAqE;AAClE,UAAIM,QAAQ,GAAG,KAAKV,KAAL,CAAWC,KAAX,GAAmB,KAAKF,KAAL,CAAWU,MAA7C;AACA,WAAKE,QAAL,CAAc;AACXV,QAAAA,KAAK,EAAES,QADI;AAEXP,QAAAA,OAAO,EAAE,IAFE;AAGXC,QAAAA,WAAW,EAAE;AAHF,OAAd;AAKF;AACH;;AACDE,EAAAA,QAAQ,GAAG;AACR,QAAG,KAAKN,KAAL,CAAWC,KAAX,GAAiB,EAAjB,IAAuB,CAAvB,IAA4B,KAAKD,KAAL,CAAWI,WAA1C,EAAsD;AACnD,UAAIQ,MAAM,GAAG,KAAKZ,KAAL,CAAWE,GAAX,GAAiB,EAA9B;AACA,UAAIW,SAAS,GAAG,KAAKb,KAAL,CAAWC,KAAX,GAAmB,EAAnC;AACA,WAAKU,QAAL,CAAc;AACXV,QAAAA,KAAK,EAAEY,SADI;AAEXX,QAAAA,GAAG,EAAEU;AAFM,OAAd;AAIF;AACH;;AAGAE,EAAAA,MAAM,GAAG;AAAA,wBACsB,KAAKd,KAD3B;AAAA,UACAC,KADA,eACAA,KADA;AAAA,UACMC,GADN,eACMA,GADN;AAAA,UACUI,QADV,eACUA,QADV;AAEP,UAAMS,WAAW,GAAG,KAAKhB,KAAL,CAAWiB,MAAX,CAAkBC,GAAlB,CAAsB,CAACC,IAAD,EAAOC,GAAP,KAC1C,oBAAC,IAAD;AACA,MAAA,GAAG,EAAEA,GADL;AAEA,MAAA,IAAI,EAAED,IAFN;AAGA,MAAA,KAAK,EAAEC,GAHP;AAIA,MAAA,YAAY,EAAE,KAAKpB,KAAL,CAAWqB,YAJzB;AAKA,MAAA,IAAI,EAAE,KAAKrB,KAAL,CAAWsB,IALjB;AAMA,MAAA,IAAI,EAAE,KAAKtB,KAAL,CAAWiB,MANjB;AAOA,MAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWG,OAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADoB,CAApB;AAUA,WAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmB,KAAKH,KAAL,CAAWC,KAA9B,CADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAiB,KAAKD,KAAL,CAAWE,GAA5B,CAFH,EAGG;AAAQ,MAAA,OAAO,EAAE,KAAKI,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHH,EAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIS,WADJ,CADH,EAIG;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAQ,MAAA,OAAO,EAAE,KAAKP,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,EAEG;AAAQ,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWuB,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH,CAJH,CAJH,CAFH;AAiBD;;AAhEgC;;AAiEpC;AAGD,eAAe1B,MAAf","sourcesContent":["import React from 'react';\nimport Card from '../card';\nimport './styles/cards.css';\nimport ''\n\nclass Player extends React.Component {\n   constructor(props){\n      super(props);\n      this.state = {\n         money: 5000,\n         bet: 100,\n         canPlay: false,\n         joinedTable: false,\n         canChangeCards: 0,\n      };\n      this.bidMoney = this.bidMoney.bind(this);\n      this.joinTable = this.joinTable.bind(this);\n   }  \n   joinTable() {\n      if(this.state.money >= this.props.minBet && !this.state.joinedTable) {\n         let newMoney = this.state.money - this.props.minBet;\n         this.setState({\n            money: newMoney,\n            canPlay: true,\n            joinedTable: true   \n         })\n      }\n   }\n   bidMoney() {\n      if(this.state.money-50 >= 0 && this.state.joinedTable){\n         let newBet = this.state.bet + 50;\n         let newBudget = this.state.money - 50\n         this.setState({\n            money: newBudget,\n            bet: newBet,\n         });\n      }\n   }\n\n\n    render() {   \n      const {money,bet,bidMoney} = this.state    \n      const cardsInHand = this.props.player.map((card, key) => \n      <Card \n      key={key} \n      card={card}\n      index={key}\n      handleChange={this.props.handleChange}\n      deck={this.props.deck}\n      hand={this.props.player}\n      canPlay={this.state.canPlay}\n      />);\n      return (\n\n         <div>\n            <p>Current Money: {this.state.money}</p>\n            <p>Current Bet: {this.state.bet}</p>\n            <button onClick={this.bidMoney}>Bid</button>\n            <div>\n               <ul className='hand_position'>\n                  {cardsInHand}\n               </ul>\n               <div className='button__container'>\n                  <button onClick={this.joinTable}>Join Table</button>\n                  <button onClick={this.props.displayResults}>Call</button>\n               </div>\n            </div>\n         </div>\n      )\n    }\n};\n\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}