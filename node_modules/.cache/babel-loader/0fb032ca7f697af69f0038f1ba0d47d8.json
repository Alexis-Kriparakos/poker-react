{"ast":null,"code":"import React from 'react';\nconst SUITS = [\"spades\", \"diamonds\", \"clubs\", \"hearts\"];\nconst RANKS = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\nconst WEIGHT = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unshuffledDeck: this.createDeck(),\n      deck: this.shuffleDeck(unshuffledDeck)\n    };\n  }\n\n  createDeck() {\n    let deck = new Array();\n\n    for (let i = 0; i < SUITS.length; i++) {\n      for (let j = 0; j < RANKS.length; j++) {\n        let card = {\n          rank: RANKS[j],\n          suit: SUITS[i],\n          weight: WEIGHT[j]\n        };\n        deck.push(card);\n      }\n    }\n\n    return deck;\n  }\n\n  shuffleDeck(deck) {\n    let m = deck.length,\n        currentElem,\n        remainElem;\n\n    while (m) {\n      remainElem = Math.floor(Math.random() * m--);\n      currentElem = deck[m];\n      deck[m] = deck[remainElem];\n      deck[remainElem] = currentElem;\n    }\n\n    return deck;\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/alexis_fiz/Desktop/poker-rect/src/component/Game.js"],"names":["React","SUITS","RANKS","WEIGHT","Game","Component","constructor","props","state","unshuffledDeck","createDeck","deck","shuffleDeck","Array","i","length","j","card","rank","suit","weight","push","m","currentElem","remainElem","Math","floor","random"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,KAAK,GAAG,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,EAAgC,QAAhC,CAAd;AACA,MAAMC,KAAK,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,IAAzC,EAA+C,GAA/C,EAAoD,GAApD,EAAyD,GAAzD,EAA8D,GAA9D,CAAd;AACA,MAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,CAAf;;AAEA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAE/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE,KAAKC,UAAL,EADP;AAETC,MAAAA,IAAI,EAAE,KAAKC,WAAL,CAAiBH,cAAjB;AAFG,KAAb;AAIH;;AACDC,EAAAA,UAAU,GAAG;AACT,QAAIC,IAAI,GAAG,IAAIE,KAAJ,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,KAAK,CAACc,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,KAAK,CAACa,MAA1B,EAAkCC,CAAC,EAAnC,EAAsC;AACpC,YAAIC,IAAI,GAAG;AAACC,UAAAA,IAAI,EAAEhB,KAAK,CAACc,CAAD,CAAZ;AAAiBG,UAAAA,IAAI,EAAElB,KAAK,CAACa,CAAD,CAA5B;AAAiCM,UAAAA,MAAM,EAAEjB,MAAM,CAACa,CAAD;AAA/C,SAAX;AACAL,QAAAA,IAAI,CAACU,IAAL,CAAUJ,IAAV;AACD;AACF;;AACD,WAAON,IAAP;AACH;;AACDC,EAAAA,WAAW,CAACD,IAAD,EAAO;AACd,QAAIW,CAAC,GAAGX,IAAI,CAACI,MAAb;AAAA,QAAqBQ,WAArB;AAAA,QAAkCC,UAAlC;;AACE,WAAOF,CAAP,EAAU;AACRE,MAAAA,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,CAAC,EAA5B,CAAb;AACAC,MAAAA,WAAW,GAAGZ,IAAI,CAACW,CAAD,CAAlB;AACAX,MAAAA,IAAI,CAACW,CAAD,CAAJ,GAAUX,IAAI,CAACa,UAAD,CAAd;AACAb,MAAAA,IAAI,CAACa,UAAD,CAAJ,GAAmBD,WAAnB;AACH;;AACD,WAAOZ,IAAP;AACD;;AA5B4B;;AA+BnC,eAAeP,IAAf","sourcesContent":["import React from 'react';\n\nconst SUITS = [\"spades\", \"diamonds\", \"clubs\", \"hearts\"];\nconst RANKS = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\"];\nconst WEIGHT = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n\nclass Game extends React.Component {\n  \n    constructor(props){\n        super(props);\n        this.state = {\n            unshuffledDeck: this.createDeck(),\n            deck: this.shuffleDeck(unshuffledDeck),\n        }\n    }\n    createDeck() {\n        let deck = new Array();\n        for (let i = 0; i < SUITS.length; i++) {\n          for (let j = 0; j < RANKS.length; j++){\n            let card = {rank: RANKS[j], suit: SUITS[i], weight: WEIGHT[j]};\n            deck.push(card);\n          }\n        }\n        return deck;\n    }\n    shuffleDeck(deck) {\n        let m = deck.length, currentElem, remainElem;\n          while (m) {\n            remainElem = Math.floor(Math.random() * m--);\n            currentElem = deck[m];\n            deck[m] = deck[remainElem];\n            deck[remainElem] = currentElem;\n        } \n        return deck;\n      }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}